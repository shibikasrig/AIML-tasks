# -*- coding: utf-8 -*-
"""AIML task 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MNOmBf9h2P19pxWqLDhjc9SH7oUolCbI
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
from sklearn.datasets import fetch_california_housing

data = fetch_california_housing(as_frame=True)
df = data.frame

print("Dataset shape:", df.shape)
print(df.head())

X = df[['MedInc', 'AveRooms']]  # using 2 features for multiple regression
y = df['MedHouseVal']

X_train, X_test, y_train, y_test = train_test_split(X, y,
                                                    test_size=0.2,
                                                    random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\nðŸ“Š Model Evaluation:")
print("MAE:", mae)
print("MSE:", mse)
print("RÂ² Score:", r2)

X_simple = df[['MedInc']]
y_simple = y

X_train_s, X_test_s, y_train_s, y_test_s = train_test_split(X_simple, y_simple,
                                                            test_size=0.2, random_state=42)

model_simple = LinearRegression()
model_simple.fit(X_train_s, y_train_s)

plt.scatter(X_test_s, y_test_s, color="blue", label="Actual")
plt.plot(X_test_s, model_simple.predict(X_test_s), color="red", linewidth=2, label="Predicted")
plt.xlabel("Median Income")
plt.ylabel("House Value")
plt.title("Simple Linear Regression (House Prices vs Median Income)")
plt.legend()
plt.show()

print("\nðŸ“Œ Model Coefficients (Multiple Regression):")
for feature, coef in zip(X.columns, model.coef_):
    print(f"{feature}: {coef}")
print("Intercept:", model.intercept_)